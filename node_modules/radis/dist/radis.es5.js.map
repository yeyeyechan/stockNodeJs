{"version":3,"file":"radis.es5.js","sources":["../src/utils.ts","../node_modules/tslib/tslib.es6.js","../node_modules/function-arguments/index.js","../src/Injector.ts","../src/Module.ts","../src/radis.ts"],"sourcesContent":["/**\n * The module name RegExp\n */\nexport const moduleNameRegex = /^[a-zA-Z][a-zA-Z0-9]*$/\n\n/**\n * The service name RegExp\n */\nexport const serviceNameRegex = /^[a-zA-Z][a-zA-Z0-9]*$/\n\n/**\n * The service method name RegExp\n */\nexport const serviceMethodNameRegex = /^[a-zA-Z_][a-zA-Z0-9_]*:[^:]+$/\n\n/**\n * Test if value is an array\n * @param value the value you want to test\n * @return True is value is an array\n */\nexport function isArray(value: any): boolean {\n  return Array.isArray(value)\n}\n\n/**\n * Test if value is a string\n * @param  value the value you want to test\n * @return true is value is a string\n */\nexport function isString(value: any): boolean {\n  return typeof value === 'string'\n}\n\n/**\n * Test if value is a function\n * @param  value the value you want to test\n * @return true is value is a function\n */\nexport function isFunction(value: any): boolean {\n  return !!(value && value.constructor && value.call && value.apply)\n}\n\n/**\n * Test if value is an Injectable\n * @param  value the value you want to test\n * @return true is value is an injectable\n */\nexport function isInjectable(value: any): boolean {\n  return isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])) || (isString(value) && serviceMethodNameRegex.test(value))\n}\n\n/**\n * Test if value is a valid module name\n * @param name the value you want to test\n * @return true is value is a valid module name\n */\nexport function isModuleName(name: string): boolean {\n  return moduleNameRegex.test(name)\n}\n\n/**\n * Test if value is a valid service name\n * @param  name the value you want to test\n * @return true is value is a valid service name\n */\nexport function isServiceName(name: string): boolean {\n  return serviceNameRegex.test(name)\n}\n\nexport type InjectableArray = (string | Function)[]\nexport type InjectableFunction = (...args: any[]) => any\nexport type Injectable = InjectableFunction | InjectableArray | String\nexport type InjectableClass = {\n  $inject?: string[]\n  new (...args: any[]): any\n}\nexport interface Service {}\nexport interface ServiceClass {\n  $inject?: string[]\n  new (...args: any[]): Service\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * function-arguments <https://github.com/tunnckoCore/function-arguments>\n *\n * Copyright (c) 2016 Charlike Mike Reagent <@tunnckoCore> (http://www.tunnckocore.tk)\n * Released under the MIT license.\n */\n\n'use strict'\n\n/**\n * > Get function arguments names.\n *\n * **Example**\n *\n * ```js\n * var fnArgs = require('function-arguments')\n *\n * console.log(fnArgs(function (a, b, c) {})) // => [ 'a', 'b', 'c' ]\n * console.log(fnArgs(function named (a , b, c) {})) // => [ 'a', 'b', 'c' ]\n *\n * console.log(fnArgs(a => {})) // => [ 'a' ]\n * console.log(fnArgs((a, b) => {})) // => [ 'a', 'b' ]\n *\n * console.log(fnArgs(function * (a ,b, c) {})) // => [ 'a', 'b', 'c' ]\n * console.log(fnArgs(function * named (a ,b, c) {})) // => [ 'a', 'b', 'c' ]\n * ```\n *\n * @param  {Function} `fn` Function from which to get arguments names.\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function functionArguments (fn) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('function-arguments expect a function')\n  }\n  if (fn.length === 0) {\n    return []\n  }\n\n  // from https://github.com/jrburke/requirejs\n  var reComments = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg\n  var fnToStr = Function.prototype.toString\n  var fnStr = fnToStr.call(fn)\n  fnStr = fnStr.replace(reComments, '') || fnStr\n  fnStr = fnStr.slice(0, fnStr.indexOf('{'))\n\n  var open = fnStr.indexOf('(')\n  var close = fnStr.indexOf(')')\n\n  open = open >= 0 ? open + 1 : 0\n  close = close > 0 ? close : fnStr.indexOf('=')\n\n  fnStr = fnStr.slice(open, close)\n  fnStr = '(' + fnStr + ')'\n\n  var match = fnStr.match(/\\(([\\s\\S]*)\\)/)\n  return match ? match[1].split(',').map(function (param) {\n    return param.trim()\n  }) : []\n}\n","import functionArguments from 'function-arguments'\nimport { Injectable, InjectableArray, InjectableClass, InjectableFunction, isArray, isFunction, isInjectable, Service } from './utils'\n\nexport interface Provider {\n  $get(...args: any[]): any\n}\n\nexport interface ProviderClass {\n  new ($injector: Injector, serviceName: string): Provider\n}\n\ninterface ServiceBag {\n  providerClass: ProviderClass\n  provider?: Provider\n  service?: Service\n}\n\nexport type InjectorLocals = { [name: string]: any }\n\nclass ResolvedInjectable {\n  constructor(public func: InjectableFunction, public self: any, public services: string[]) {}\n  invoke(injector: Injector, locals: InjectorLocals): any {\n    let services = this.services.map(serviceName => injector.getService(serviceName, locals))\n    return this.func.apply(this.self, services)\n  }\n}\n\n/**\n *\n */\nexport class Injector {\n  private services: { [name: string]: ServiceBag }\n\n  /**\n   *\n   */\n  constructor() {\n    this.services = {}\n  }\n\n  /**\n   * This method invoke the given injectable applying right parameters based on their name\n   * @param injectable A function to be invoked\n   * @param self An object to which the injectable function will be bind to\n   * @param locals Additional one-time services that will be injected into the injectable\n   * @return The return value of injectable\n   */\n  invoke(injectable: Injectable, self: any = null, locals: any = {}) {\n    return this._resolveInjectable(injectable, self).invoke(this, locals)\n  }\n\n  /**\n   * Call new operator on the given injectableClass proving the controller with the right parameters.\n   * @info injectableClass.$inject MUST be an array\n   * @param injectableClass A injectable class\n   * @param locals Additional variables that will be injected\n   * @returns A new instance of injectableClass\n   */\n  instantiate(injectableClass: InjectableClass, locals: any = {}): any {\n    let serviceNames = injectableClass['$inject'] || []\n    let services = serviceNames.map(serviceName => this.getService(serviceName, locals))\n    return new injectableClass(...services)\n  }\n\n  /**\n   * This method lift a classic function to an injectable function.\n   * @example\n   * let middleware = (service1, req, res, nex) => console.log(service1, req, res, next)\n   * let liftedMiddleware = $injector.lift(middleware, [\"req\", \"res\", \"next\"]);\n   * app.use(liftedMiddleware) OR  liftedMiddleware(req, res, next(\n   * @param injectable The function you want to lift\n   * @param self An object to which the injectable function will be bind to\n   * @param paramNames the name of the parameter lift will received so they can be injected.\n   * @param locals Additional variables that will be injected\n   * @return {Function} The lifted function\n   */\n  lift(injectable: Injectable, self: any = null, paramNames: string[] = [], locals: InjectorLocals = {}) {\n    let cache: ResolvedInjectable\n    return (...args: any[]) => {\n      // Merge locals and positional params\n      let _locals: InjectorLocals = Object.assign({}, locals)\n      paramNames.forEach((name, index) => {\n        _locals[name] = args[index]\n      })\n\n      // If injection was already resolve use cached version.\n      if (cache) {\n        return cache.invoke(this, _locals)\n      }\n\n      cache = this._resolveInjectable(injectable, self)\n      return cache.invoke(this, _locals)\n    }\n  }\n\n  /**\n   * @param serviceName The name of the service\n   * @param locals Additional variables that will be injected\n   * @returns The service instance\n   * @throws The service must exist\n   * @private\n   */\n  getService(serviceName: string, locals: any = {}): Service {\n    if (locals[serviceName] !== undefined) {\n      return locals[serviceName]\n    }\n\n    if (serviceName === '$injector') {\n      return this\n    }\n\n    if (serviceName.endsWith('Provider')) {\n      return this._getProvider(serviceName.substr(0, serviceName.length - 'Provider'.length))\n    }\n\n    const serviceBag = this.services[serviceName]\n    if (!serviceBag) {\n      throw new Error(`Can't load service with name ${serviceName}`)\n    }\n\n    const provider = this._getProvider(serviceName)\n    if (serviceBag.service === undefined) {\n      serviceBag.service = this.invoke(provider.$get, provider, { $name: serviceName })\n      if (serviceBag.service === undefined) {\n        throw new Error(`Method $get of ${serviceName} provider must return a valid service got ${serviceBag.service}`)\n      }\n    }\n\n    return serviceBag.service\n  }\n\n  /**\n   * Add a child injector\n   * @param $injector The child injector\n   * @return {Injector} this\n   */\n  addChild($injector: Injector): Injector {\n    this.services = {\n      ...$injector.services,\n      ...this.services\n    }\n    return this\n  }\n\n  addProvider(serviceName: string, providerClass: ProviderClass): Injector {\n    this.services[serviceName] = { providerClass }\n    return this\n  }\n\n  /**\n   * @param serviceName The service name\n   * @returns the provider\n   * @private\n   */\n  private _getProvider(serviceName: string): Provider {\n    const serviceBag = this.services[serviceName]\n    if (!serviceBag) {\n      throw new Error(`Can't load service with name ${serviceName}`)\n    }\n\n    if (serviceBag.provider === undefined) {\n      serviceBag.provider = new serviceBag.providerClass(this, serviceName)\n    }\n\n    return serviceBag.provider\n  }\n\n  private _resolveFunctionInjectable(injectable: InjectableFunction, self: any): ResolvedInjectable {\n    let services = functionArguments(injectable)\n\n    /*\n       * Handle single param arrow function without params with one line return\n       * eg: v => true\n       * https://github.com/charlike/function-arguments/issues/2\n       */\n    if (services.length === 1 && services[0] === '') {\n      let funcStr = injectable.toString()\n      let params = funcStr.replace(/\\s/gm, '').split('=>')\n      if (params.length < 2) throw new Error(\"Can't parse params for function ${params}\")\n      services = [params[0]]\n    }\n    return new ResolvedInjectable(injectable, self || this, services)\n  }\n\n  private _resolveArrayInjectable(injectable: InjectableArray, self: any): ResolvedInjectable {\n    return new ResolvedInjectable(injectable[injectable.length - 1] as any, self || this, injectable.slice(0, -1) as any)\n  }\n\n  private _resolveStringInjectable(injectable: string, self: any): ResolvedInjectable {\n    const tmp = injectable.split(':')\n    self = this.getService(tmp[0], {})\n\n    if (!isFunction(self[tmp[1]])) {\n      throw new Error(`Invalid serviceMethod injectable ${injectable}. No method ${tmp[1]} found in service ${tmp[0]}`)\n    }\n\n    return this._resolveFunctionInjectable(self[tmp[1]], self)\n  }\n\n  /**\n   *\n   */\n  private _resolveInjectable(injectable: Injectable, self: any): ResolvedInjectable {\n    if (!isInjectable(injectable)) {\n      throw new Error(`${injectable} is not a valid injectable`)\n    } else if (isArray(injectable)) {\n      return this._resolveArrayInjectable(injectable as any, self)\n    } else if (isFunction(injectable)) {\n      return this._resolveFunctionInjectable(injectable as any, self)\n    } else {\n      return this._resolveStringInjectable(injectable as any, self)\n    }\n  }\n}\n","import { Injector, ProviderClass } from './Injector'\nimport { Injectable, isInjectable, isFunction, isServiceName, ServiceClass, serviceNameRegex } from './utils'\n\nexport class Module {\n  private name: string\n  private dependencies: Module[]\n  private services: { [name: string]: ProviderClass }\n  private configHooks: Injectable[]\n  private runHooks: Injectable[]\n\n  /**\n   * @param name The name of ne module\n   * @param dependencies An array of dependencies modules\n   */\n  constructor(name: string, dependencies: Module[]) {\n    this.name = name\n    this.dependencies = dependencies\n\n    this.services = {}\n    this.configHooks = []\n    this.runHooks = []\n  }\n\n  /**\n   * @returns The module name\n   */\n  getName(): string {\n    return this.name\n  }\n\n  /**\n   * @param injectable A config hook function\n   * @returns The current module\n   */\n  config(injectable: Injectable): Module {\n    if (!isInjectable(injectable)) {\n      throw new Error(`Can't register config injectable ${injectable} in ${this.getName()}`)\n    }\n\n    this.configHooks.push(injectable)\n    return this\n  }\n\n  /**\n   * @param {Injectable} injectable A run hook function\n   * @returns {Module} The current module\n   */\n  run(injectable: Injectable): Module {\n    if (!isInjectable(injectable)) {\n      throw new Error(`Can't register run injectable ${injectable} in ${this.getName()}`)\n    }\n\n    this.runHooks.push(injectable)\n    return this\n  }\n\n  /**\n   * Register a new service in the module\n   * @param serviceName the service name\n   * @param serviceClass The service class\n   * @returns this\n   */\n  service(serviceName: string, serviceClass: ServiceClass): Module {\n    if (!isServiceName(serviceName)) {\n      throw new Error(`Can't register service in ${this.getName()} with name ${serviceName}. serviceName must match ${serviceNameRegex}`)\n    }\n\n    if (!isFunction(serviceClass)) {\n      throw new Error(`Can't register service in ${this.getName()} with name ${serviceName}. Invalid serviceClass ${serviceClass}`)\n    }\n\n    this.services[serviceName] = class {\n      $get($injector: Injector) {\n        return $injector.instantiate(serviceClass, { $name: serviceName })\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Register a new service in the module by providing a factory\n   * @param serviceName the name of the service\n   * @param injectable The function responsible of creating the service instance.\n   * @returns this\n   */\n  factory(serviceName: string, injectable: Injectable): Module {\n    if (!isServiceName(serviceName)) {\n      throw new Error(`Can't register factory in ${this.getName()} with name ${serviceName}. serviceName must match ${serviceNameRegex}`)\n    }\n\n    if (!isInjectable(injectable)) {\n      throw new Error(`Can't register factory in ${this.getName()} with name ${serviceName}. Invalid injectable ${injectable}`)\n    }\n\n    this.services[serviceName] = class {\n      $get($injector: Injector) {\n        return $injector.invoke(injectable, $injector, { $name: serviceName })\n      }\n    }\n    return this\n  }\n\n  /**\n   * Register a new service in the module by providing a provider class\n   * @param serviceName The service name\n   * @param providerClass A provider constructor\n   * @returns this\n   */\n  provider(serviceName: string, providerClass: ProviderClass): Module {\n    if (!isServiceName(serviceName)) {\n      throw new Error(`Can't register provider in ${this.getName()} with name ${serviceName}. serviceName must match ${serviceNameRegex}`)\n    }\n\n    if (!isFunction(providerClass)) {\n      throw new Error(`Can't register provider in ${this.getName()} with name ${serviceName}. Invalid providerClass ${providerClass}`)\n    }\n\n    this.services[serviceName] = providerClass\n    return this\n  }\n\n  /**\n   * Bootstrap the module\n   * @return The module injector\n   */\n  async bootstrap(): Promise<Injector> {\n    const modules: Module[] = []\n    const $injectors: Injector[] = []\n\n    const $injector = this._bootstrap(modules, $injectors)\n\n    modules.push(this)\n    $injectors.push($injector)\n\n    // TODO maybe throw if a service instance try to be injected in the config hook\n    for (let i = 0; modules.length > i; i++) {\n      let module = modules[i]\n      for (let j = 0; module.configHooks.length > j; j++) {\n        let hook = module.configHooks[j]\n        await $injectors[i].invoke(hook)\n      }\n    }\n\n    for (let i = 0; modules.length > i; i++) {\n      let module = modules[i]\n      for (let j = 0; module.runHooks.length > j; j++) {\n        let hook = module.runHooks[j]\n        await $injectors[i].invoke(hook)\n      }\n    }\n    return $injector\n  }\n\n  /**\n   * Bootstrap the module.\n   * @param modules An array of module\n   * @param $injectors An array of corresponding injector\n   * @returns the newly created injector\n   */\n  private _bootstrap(modules: Module[], $injectors: Injector[]): Injector {\n    const $injector = new Injector()\n\n    Object.keys(this.services).forEach(serviceName => $injector.addProvider(serviceName, this.services[serviceName]))\n\n    this.dependencies.forEach(dependency => {\n      let moduleIndex = modules.indexOf(dependency)\n      if (moduleIndex === -1) {\n        $injectors.push(dependency._bootstrap(modules, $injectors))\n        modules.push(dependency)\n        moduleIndex = modules.length - 1\n      }\n\n      $injector.addChild($injectors[moduleIndex])\n    })\n\n    return $injector\n  }\n}\n","import * as utils from './utils'\nimport { Module } from './Module'\n\nexport const radis = {\n  module: (moduleName: string, dependencies: Module[] = []): Module => {\n    if (!utils.isModuleName(moduleName)) {\n      throw new Error(`Invalid module name ${moduleName}. Module must match ${utils.moduleNameRegex.toString()}`)\n    }\n\n    return new Module(moduleName, dependencies)\n  }\n}\n"],"names":["utils.isModuleName","utils.moduleNameRegex"],"mappings":"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"}