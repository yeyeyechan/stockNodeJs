/**
 * The module name RegExp
 */
export declare const moduleNameRegex: RegExp;
/**
 * The service name RegExp
 */
export declare const serviceNameRegex: RegExp;
/**
 * The service method name RegExp
 */
export declare const serviceMethodNameRegex: RegExp;
/**
 * Test if value is an array
 * @param value the value you want to test
 * @return True is value is an array
 */
export declare function isArray(value: any): boolean;
/**
 * Test if value is a string
 * @param  value the value you want to test
 * @return true is value is a string
 */
export declare function isString(value: any): boolean;
/**
 * Test if value is a function
 * @param  value the value you want to test
 * @return true is value is a function
 */
export declare function isFunction(value: any): boolean;
/**
 * Test if value is an Injectable
 * @param  value the value you want to test
 * @return true is value is an injectable
 */
export declare function isInjectable(value: any): boolean;
/**
 * Test if value is a valid module name
 * @param name the value you want to test
 * @return true is value is a valid module name
 */
export declare function isModuleName(name: string): boolean;
/**
 * Test if value is a valid service name
 * @param  name the value you want to test
 * @return true is value is a valid service name
 */
export declare function isServiceName(name: string): boolean;
export declare type InjectableArray = (string | Function)[];
export declare type InjectableFunction = (...args: any[]) => any;
export declare type Injectable = InjectableFunction | InjectableArray | String;
export declare type InjectableClass = {
    $inject?: string[];
    new (...args: any[]): any;
};
export interface Service {
}
export interface ServiceClass {
    $inject?: string[];
    new (...args: any[]): Service;
}
