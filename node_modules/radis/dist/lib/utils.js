"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * The module name RegExp
 */
exports.moduleNameRegex = /^[a-zA-Z][a-zA-Z0-9]*$/;
/**
 * The service name RegExp
 */
exports.serviceNameRegex = /^[a-zA-Z][a-zA-Z0-9]*$/;
/**
 * The service method name RegExp
 */
exports.serviceMethodNameRegex = /^[a-zA-Z_][a-zA-Z0-9_]*:[^:]+$/;
/**
 * Test if value is an array
 * @param value the value you want to test
 * @return True is value is an array
 */
function isArray(value) {
    return Array.isArray(value);
}
exports.isArray = isArray;
/**
 * Test if value is a string
 * @param  value the value you want to test
 * @return true is value is a string
 */
function isString(value) {
    return typeof value === 'string';
}
exports.isString = isString;
/**
 * Test if value is a function
 * @param  value the value you want to test
 * @return true is value is a function
 */
function isFunction(value) {
    return !!(value && value.constructor && value.call && value.apply);
}
exports.isFunction = isFunction;
/**
 * Test if value is an Injectable
 * @param  value the value you want to test
 * @return true is value is an injectable
 */
function isInjectable(value) {
    return isFunction(value) || (isArray(value) && isFunction(value[value.length - 1])) || (isString(value) && exports.serviceMethodNameRegex.test(value));
}
exports.isInjectable = isInjectable;
/**
 * Test if value is a valid module name
 * @param name the value you want to test
 * @return true is value is a valid module name
 */
function isModuleName(name) {
    return exports.moduleNameRegex.test(name);
}
exports.isModuleName = isModuleName;
/**
 * Test if value is a valid service name
 * @param  name the value you want to test
 * @return true is value is a valid service name
 */
function isServiceName(name) {
    return exports.serviceNameRegex.test(name);
}
exports.isServiceName = isServiceName;
//# sourceMappingURL=utils.js.map